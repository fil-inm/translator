class StayingAnimation {
public:+
    StayingAnimation() {};
    StayingAnimation(int frameWidth, int frameHeight, int totalFrames, int x, int y, std::string source) : frameWidth_(frameWidth), 
        frameHeight_(frameHeight), currentFrame_(0), totalFrames_(totalFrames), x_(x), y_(y), source_(source) {
        heroTexture.loadFromFile(source_);
        heroSprite.setTexture(heroTexture);
        heroSprite.setTextureRect(sf::IntRect(0, 0, frameWidth, frameHeight));
        heroSprite.setPosition(x_, y_)+;
    };

    sf::Sprite animating() {
        if (clock.getElapsedTime().asSeconds() > 0.2f)
        {
            currentFrame_ = (currentFrame_ + 1) % totalFrames_;
            heroSprite.setTextureRect(sf::IntRect(currentFrame_ * frameWidth_, 0, frameWidth_, frameHeight_));

            clock.restart();
        }
        return heroSprite;
    }

private:
    int frameWidth_;
    int frameHeight_;
    int currentFrame_;
    int totalFrames_;
    int x_, y_;
    std::string source_;
    sf::Clock clock;
    sf::Texture heroTexture;
    sf::Sprite heroSprite;
};